// Code generated by protoc-gen-go. DO NOT EDIT.
// source: collections.proto

package collections // import "github.com/airbloc/airbloc-go/api/collections"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Collection struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	IncentivePolicy      string   `protobuf:"bytes,11,opt,name=incentivePolicy,proto3" json:"incentivePolicy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Collection) Reset()         { *m = Collection{} }
func (m *Collection) String() string { return proto.CompactTextString(m) }
func (*Collection) ProtoMessage()    {}
func (*Collection) Descriptor() ([]byte, []int) {
	return fileDescriptor_collections_b369c5e50092ba91, []int{0}
}
func (m *Collection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Collection.Unmarshal(m, b)
}
func (m *Collection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Collection.Marshal(b, m, deterministic)
}
func (dst *Collection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Collection.Merge(dst, src)
}
func (m *Collection) XXX_Size() int {
	return xxx_messageInfo_Collection.Size(m)
}
func (m *Collection) XXX_DiscardUnknown() {
	xxx_messageInfo_Collection.DiscardUnknown(m)
}

var xxx_messageInfo_Collection proto.InternalMessageInfo

func (m *Collection) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Collection) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Collection) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Collection) GetIncentivePolicy() string {
	if m != nil {
		return m.IncentivePolicy
	}
	return ""
}

type CreateCollectionRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	IncentivePolicy      string   `protobuf:"bytes,11,opt,name=incentivePolicy,proto3" json:"incentivePolicy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCollectionRequest) Reset()         { *m = CreateCollectionRequest{} }
func (m *CreateCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCollectionRequest) ProtoMessage()    {}
func (*CreateCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_collections_b369c5e50092ba91, []int{1}
}
func (m *CreateCollectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCollectionRequest.Unmarshal(m, b)
}
func (m *CreateCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCollectionRequest.Marshal(b, m, deterministic)
}
func (dst *CreateCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCollectionRequest.Merge(dst, src)
}
func (m *CreateCollectionRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCollectionRequest.Size(m)
}
func (m *CreateCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCollectionRequest proto.InternalMessageInfo

func (m *CreateCollectionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateCollectionRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CreateCollectionRequest) GetIncentivePolicy() string {
	if m != nil {
		return m.IncentivePolicy
	}
	return ""
}

type CreateCollectionResponse struct {
	CollectionId         string   `protobuf:"bytes,1,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCollectionResponse) Reset()         { *m = CreateCollectionResponse{} }
func (m *CreateCollectionResponse) String() string { return proto.CompactTextString(m) }
func (*CreateCollectionResponse) ProtoMessage()    {}
func (*CreateCollectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_collections_b369c5e50092ba91, []int{2}
}
func (m *CreateCollectionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCollectionResponse.Unmarshal(m, b)
}
func (m *CreateCollectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCollectionResponse.Marshal(b, m, deterministic)
}
func (dst *CreateCollectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCollectionResponse.Merge(dst, src)
}
func (m *CreateCollectionResponse) XXX_Size() int {
	return xxx_messageInfo_CreateCollectionResponse.Size(m)
}
func (m *CreateCollectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCollectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCollectionResponse proto.InternalMessageInfo

func (m *CreateCollectionResponse) GetCollectionId() string {
	if m != nil {
		return m.CollectionId
	}
	return ""
}

type ListCollectionRequest struct {
	PageIndex            int32    `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	ItemsPerPage         int32    `protobuf:"varint,2,opt,name=itemsPerPage,proto3" json:"itemsPerPage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListCollectionRequest) Reset()         { *m = ListCollectionRequest{} }
func (m *ListCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*ListCollectionRequest) ProtoMessage()    {}
func (*ListCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_collections_b369c5e50092ba91, []int{3}
}
func (m *ListCollectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCollectionRequest.Unmarshal(m, b)
}
func (m *ListCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCollectionRequest.Marshal(b, m, deterministic)
}
func (dst *ListCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCollectionRequest.Merge(dst, src)
}
func (m *ListCollectionRequest) XXX_Size() int {
	return xxx_messageInfo_ListCollectionRequest.Size(m)
}
func (m *ListCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCollectionRequest proto.InternalMessageInfo

func (m *ListCollectionRequest) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *ListCollectionRequest) GetItemsPerPage() int32 {
	if m != nil {
		return m.ItemsPerPage
	}
	return 0
}

type ListCollectionResponse struct {
	Total                int32         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Collections          []*Collection `protobuf:"bytes,2,rep,name=collections,proto3" json:"collections,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListCollectionResponse) Reset()         { *m = ListCollectionResponse{} }
func (m *ListCollectionResponse) String() string { return proto.CompactTextString(m) }
func (*ListCollectionResponse) ProtoMessage()    {}
func (*ListCollectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_collections_b369c5e50092ba91, []int{4}
}
func (m *ListCollectionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCollectionResponse.Unmarshal(m, b)
}
func (m *ListCollectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCollectionResponse.Marshal(b, m, deterministic)
}
func (dst *ListCollectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCollectionResponse.Merge(dst, src)
}
func (m *ListCollectionResponse) XXX_Size() int {
	return xxx_messageInfo_ListCollectionResponse.Size(m)
}
func (m *ListCollectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCollectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCollectionResponse proto.InternalMessageInfo

func (m *ListCollectionResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListCollectionResponse) GetCollections() []*Collection {
	if m != nil {
		return m.Collections
	}
	return nil
}

func init() {
	proto.RegisterType((*Collection)(nil), "airbloc.collections.Collection")
	proto.RegisterType((*CreateCollectionRequest)(nil), "airbloc.collections.CreateCollectionRequest")
	proto.RegisterType((*CreateCollectionResponse)(nil), "airbloc.collections.CreateCollectionResponse")
	proto.RegisterType((*ListCollectionRequest)(nil), "airbloc.collections.ListCollectionRequest")
	proto.RegisterType((*ListCollectionResponse)(nil), "airbloc.collections.ListCollectionResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CollectionServiceClient is the client API for CollectionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CollectionServiceClient interface {
	Create(ctx context.Context, in *CreateCollectionRequest, opts ...grpc.CallOption) (*CreateCollectionResponse, error)
	List(ctx context.Context, in *ListCollectionRequest, opts ...grpc.CallOption) (*ListCollectionResponse, error)
}

type collectionServiceClient struct {
	cc *grpc.ClientConn
}

func NewCollectionServiceClient(cc *grpc.ClientConn) CollectionServiceClient {
	return &collectionServiceClient{cc}
}

func (c *collectionServiceClient) Create(ctx context.Context, in *CreateCollectionRequest, opts ...grpc.CallOption) (*CreateCollectionResponse, error) {
	out := new(CreateCollectionResponse)
	err := c.cc.Invoke(ctx, "/airbloc.collections.CollectionService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectionServiceClient) List(ctx context.Context, in *ListCollectionRequest, opts ...grpc.CallOption) (*ListCollectionResponse, error) {
	out := new(ListCollectionResponse)
	err := c.cc.Invoke(ctx, "/airbloc.collections.CollectionService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CollectionServiceServer is the server API for CollectionService service.
type CollectionServiceServer interface {
	Create(context.Context, *CreateCollectionRequest) (*CreateCollectionResponse, error)
	List(context.Context, *ListCollectionRequest) (*ListCollectionResponse, error)
}

func RegisterCollectionServiceServer(s *grpc.Server, srv CollectionServiceServer) {
	s.RegisterService(&_CollectionService_serviceDesc, srv)
}

func _CollectionService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectionServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/airbloc.collections.CollectionService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectionServiceServer).Create(ctx, req.(*CreateCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollectionService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectionServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/airbloc.collections.CollectionService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectionServiceServer).List(ctx, req.(*ListCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CollectionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "airbloc.collections.CollectionService",
	HandlerType: (*CollectionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _CollectionService_Create_Handler,
		},
		{
			MethodName: "List",
			Handler:    _CollectionService_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "collections.proto",
}

func init() { proto.RegisterFile("collections.proto", fileDescriptor_collections_b369c5e50092ba91) }

var fileDescriptor_collections_b369c5e50092ba91 = []byte{
	// 352 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0x4b, 0x4f, 0xf2, 0x40,
	0x14, 0x4d, 0x4b, 0x21, 0x1f, 0xb7, 0x5f, 0x14, 0xc6, 0x57, 0x43, 0x4c, 0x24, 0x5d, 0x11, 0x95,
	0x36, 0xc1, 0xbd, 0x89, 0xb2, 0xc2, 0xb8, 0x20, 0x75, 0xa5, 0x1b, 0x33, 0x0c, 0x37, 0x75, 0x92,
	0xd2, 0xe9, 0x63, 0x20, 0xf2, 0x5b, 0xfd, 0x33, 0xa6, 0x0f, 0x68, 0x81, 0x59, 0x10, 0x57, 0x9d,
	0x39, 0x77, 0xce, 0x39, 0xf7, 0x9e, 0x9b, 0x42, 0x97, 0x89, 0x20, 0x40, 0x26, 0xb9, 0x08, 0x53,
	0x27, 0x4a, 0x84, 0x14, 0xe4, 0x8c, 0xf2, 0x64, 0x16, 0x08, 0xe6, 0xd4, 0x4a, 0xb6, 0x04, 0x18,
	0x6f, 0xaf, 0xe4, 0x04, 0x74, 0x3e, 0xb7, 0xb4, 0xbe, 0x36, 0x68, 0x7b, 0x3a, 0x9f, 0x13, 0x02,
	0x46, 0x48, 0x17, 0x68, 0xe9, 0x39, 0x92, 0x9f, 0x33, 0x4c, 0xae, 0x23, 0xb4, 0x1a, 0x05, 0x96,
	0x9d, 0xc9, 0x00, 0x4e, 0x79, 0xc8, 0x30, 0x94, 0x7c, 0x85, 0x53, 0x11, 0x70, 0xb6, 0xb6, 0xcc,
	0xbc, 0xbc, 0x0f, 0xbf, 0x18, 0xff, 0x8c, 0x8e, 0x69, 0xc7, 0x70, 0x35, 0x4e, 0x90, 0x4a, 0xac,
	0xbc, 0x3d, 0x8c, 0x97, 0x98, 0xca, 0xad, 0xa5, 0xa6, 0xb0, 0xd4, 0xff, 0x68, 0xd9, 0xe8, 0x98,
	0xf6, 0x23, 0x58, 0x87, 0x96, 0x69, 0x24, 0xc2, 0x14, 0x89, 0x0d, 0xff, 0xab, 0x4c, 0x26, 0x9b,
	0x00, 0x76, 0x30, 0xfb, 0x1d, 0x2e, 0x5e, 0x79, 0x2a, 0x0f, 0x1b, 0xbe, 0x86, 0x76, 0x44, 0x7d,
	0x9c, 0x84, 0x73, 0xfc, 0xce, 0x99, 0x4d, 0xaf, 0x02, 0x32, 0x69, 0x2e, 0x71, 0x91, 0x4e, 0x31,
	0x99, 0x52, 0xbf, 0x18, 0xa1, 0xe9, 0xed, 0x60, 0x76, 0x0c, 0x97, 0xfb, 0xd2, 0x65, 0x63, 0xe7,
	0xd0, 0x94, 0x42, 0xd2, 0xa0, 0xd4, 0x2d, 0x2e, 0xe4, 0x09, 0xcc, 0xda, 0x0a, 0x2d, 0xbd, 0xdf,
	0x18, 0x98, 0xa3, 0x1b, 0x47, 0xb1, 0x5e, 0xa7, 0xa6, 0x59, 0xe7, 0x8c, 0x7e, 0x34, 0xe8, 0x56,
	0xb5, 0x37, 0x4c, 0x56, 0x9c, 0x21, 0x41, 0x68, 0x15, 0x19, 0x91, 0x7b, 0xb5, 0x9a, 0x7a, 0x67,
	0xbd, 0xe1, 0x91, 0xaf, 0xcb, 0xa9, 0x3e, 0xc1, 0xc8, 0xe6, 0x25, 0xb7, 0x4a, 0x9a, 0x32, 0xe5,
	0xde, 0xdd, 0x51, 0x6f, 0x0b, 0x83, 0x67, 0xf7, 0x63, 0xe8, 0x73, 0xf9, 0xb5, 0x9c, 0x39, 0x4c,
	0x2c, 0xdc, 0x92, 0xb8, 0xf9, 0x0e, 0x7d, 0xe1, 0xd2, 0x88, 0xbb, 0x35, 0x9d, 0x59, 0x2b, 0xff,
	0x43, 0x1e, 0x7e, 0x03, 0x00, 0x00, 0xff, 0xff, 0xfa, 0xa7, 0xbd, 0xac, 0x36, 0x03, 0x00, 0x00,
}
