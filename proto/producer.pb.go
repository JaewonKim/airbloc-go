// Code generated by protoc-gen-go. DO NOT EDIT.
// source: producer.proto

package airbloc_producer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Identifier struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Identifier           string   `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Identifier) Reset()         { *m = Identifier{} }
func (m *Identifier) String() string { return proto.CompactTextString(m) }
func (*Identifier) ProtoMessage()    {}
func (*Identifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_producer_1798be2e1a2df70c, []int{0}
}
func (m *Identifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Identifier.Unmarshal(m, b)
}
func (m *Identifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Identifier.Marshal(b, m, deterministic)
}
func (dst *Identifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Identifier.Merge(dst, src)
}
func (m *Identifier) XXX_Size() int {
	return xxx_messageInfo_Identifier.Size(m)
}
func (m *Identifier) XXX_DiscardUnknown() {
	xxx_messageInfo_Identifier.DiscardUnknown(m)
}

var xxx_messageInfo_Identifier proto.InternalMessageInfo

func (m *Identifier) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Identifier) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

type RawData struct {
	CategoryOfApp        string      `protobuf:"bytes,1,opt,name=categoryOfApp,proto3" json:"categoryOfApp,omitempty"`
	OwnerIdentifier      *Identifier `protobuf:"bytes,2,opt,name=ownerIdentifier,proto3" json:"ownerIdentifier,omitempty"`
	Payload              string      `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RawData) Reset()         { *m = RawData{} }
func (m *RawData) String() string { return proto.CompactTextString(m) }
func (*RawData) ProtoMessage()    {}
func (*RawData) Descriptor() ([]byte, []int) {
	return fileDescriptor_producer_1798be2e1a2df70c, []int{1}
}
func (m *RawData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawData.Unmarshal(m, b)
}
func (m *RawData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawData.Marshal(b, m, deterministic)
}
func (dst *RawData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawData.Merge(dst, src)
}
func (m *RawData) XXX_Size() int {
	return xxx_messageInfo_RawData.Size(m)
}
func (m *RawData) XXX_DiscardUnknown() {
	xxx_messageInfo_RawData.DiscardUnknown(m)
}

var xxx_messageInfo_RawData proto.InternalMessageInfo

func (m *RawData) GetCategoryOfApp() string {
	if m != nil {
		return m.CategoryOfApp
	}
	return ""
}

func (m *RawData) GetOwnerIdentifier() *Identifier {
	if m != nil {
		return m.OwnerIdentifier
	}
	return nil
}

func (m *RawData) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

type AddDataResult struct {
	Succeed              bool     `protobuf:"varint,1,opt,name=succeed,proto3" json:"succeed,omitempty"`
	DataId               string   `protobuf:"bytes,2,opt,name=dataId,proto3" json:"dataId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddDataResult) Reset()         { *m = AddDataResult{} }
func (m *AddDataResult) String() string { return proto.CompactTextString(m) }
func (*AddDataResult) ProtoMessage()    {}
func (*AddDataResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_producer_1798be2e1a2df70c, []int{2}
}
func (m *AddDataResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddDataResult.Unmarshal(m, b)
}
func (m *AddDataResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddDataResult.Marshal(b, m, deterministic)
}
func (dst *AddDataResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddDataResult.Merge(dst, src)
}
func (m *AddDataResult) XXX_Size() int {
	return xxx_messageInfo_AddDataResult.Size(m)
}
func (m *AddDataResult) XXX_DiscardUnknown() {
	xxx_messageInfo_AddDataResult.DiscardUnknown(m)
}

var xxx_messageInfo_AddDataResult proto.InternalMessageInfo

func (m *AddDataResult) GetSucceed() bool {
	if m != nil {
		return m.Succeed
	}
	return false
}

func (m *AddDataResult) GetDataId() string {
	if m != nil {
		return m.DataId
	}
	return ""
}

func init() {
	proto.RegisterType((*Identifier)(nil), "airbloc.producer.Identifier")
	proto.RegisterType((*RawData)(nil), "airbloc.producer.RawData")
	proto.RegisterType((*AddDataResult)(nil), "airbloc.producer.AddDataResult")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProducerClient is the client API for Producer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProducerClient interface {
	AddData(ctx context.Context, opts ...grpc.CallOption) (Producer_AddDataClient, error)
}

type producerClient struct {
	cc *grpc.ClientConn
}

func NewProducerClient(cc *grpc.ClientConn) ProducerClient {
	return &producerClient{cc}
}

func (c *producerClient) AddData(ctx context.Context, opts ...grpc.CallOption) (Producer_AddDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Producer_serviceDesc.Streams[0], "/airbloc.producer.Producer/AddData", opts...)
	if err != nil {
		return nil, err
	}
	x := &producerAddDataClient{stream}
	return x, nil
}

type Producer_AddDataClient interface {
	Send(*RawData) error
	Recv() (*AddDataResult, error)
	grpc.ClientStream
}

type producerAddDataClient struct {
	grpc.ClientStream
}

func (x *producerAddDataClient) Send(m *RawData) error {
	return x.ClientStream.SendMsg(m)
}

func (x *producerAddDataClient) Recv() (*AddDataResult, error) {
	m := new(AddDataResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ProducerServer is the server API for Producer service.
type ProducerServer interface {
	AddData(Producer_AddDataServer) error
}

func RegisterProducerServer(s *grpc.Server, srv ProducerServer) {
	s.RegisterService(&_Producer_serviceDesc, srv)
}

func _Producer_AddData_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProducerServer).AddData(&producerAddDataServer{stream})
}

type Producer_AddDataServer interface {
	Send(*AddDataResult) error
	Recv() (*RawData, error)
	grpc.ServerStream
}

type producerAddDataServer struct {
	grpc.ServerStream
}

func (x *producerAddDataServer) Send(m *AddDataResult) error {
	return x.ServerStream.SendMsg(m)
}

func (x *producerAddDataServer) Recv() (*RawData, error) {
	m := new(RawData)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Producer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "airbloc.producer.Producer",
	HandlerType: (*ProducerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "AddData",
			Handler:       _Producer_AddData_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "producer.proto",
}

func init() { proto.RegisterFile("producer.proto", fileDescriptor_producer_1798be2e1a2df70c) }

var fileDescriptor_producer_1798be2e1a2df70c = []byte{
	// 248 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0x41, 0x4b, 0x03, 0x31,
	0x10, 0x85, 0x8d, 0x4a, 0xb7, 0x8e, 0x54, 0x65, 0x0e, 0xb2, 0x8a, 0xa8, 0x2c, 0x1e, 0x7a, 0x5a,
	0xa4, 0xfe, 0x01, 0x17, 0x44, 0x58, 0x3c, 0x28, 0xb9, 0x78, 0x9e, 0x26, 0x53, 0x09, 0x2c, 0x4d,
	0x48, 0xb3, 0x94, 0xfd, 0x19, 0xfe, 0x63, 0x69, 0xc8, 0xaa, 0xdb, 0xbd, 0xe5, 0xbd, 0x79, 0x79,
	0xf9, 0x86, 0xc0, 0x99, 0xf3, 0x56, 0xb7, 0x8a, 0x7d, 0xe9, 0xbc, 0x0d, 0x16, 0x2f, 0xc8, 0xf8,
	0x65, 0x63, 0x55, 0xd9, 0xfb, 0xc5, 0x33, 0x40, 0xad, 0x79, 0x1d, 0xcc, 0xca, 0xb0, 0x47, 0x84,
	0xe3, 0xd0, 0x39, 0xce, 0xc5, 0xbd, 0x98, 0x9f, 0xc8, 0x78, 0xc6, 0x5b, 0x00, 0xf3, 0x9b, 0xc8,
	0x0f, 0xe3, 0xe4, 0x9f, 0x53, 0x7c, 0x0b, 0xc8, 0x24, 0x6d, 0x5f, 0x28, 0x10, 0x3e, 0xc0, 0x4c,
	0x51, 0xe0, 0x2f, 0xeb, 0xbb, 0xf7, 0x55, 0xe5, 0x5c, 0x2a, 0x1a, 0x9a, 0xf8, 0x0a, 0xe7, 0x76,
	0xbb, 0x66, 0x5f, 0x0f, 0x6b, 0x4f, 0x17, 0x37, 0xe5, 0x3e, 0x5f, 0xf9, 0x97, 0x91, 0xfb, 0x97,
	0x30, 0x87, 0xcc, 0x51, 0xd7, 0x58, 0xd2, 0xf9, 0x51, 0x7c, 0xa7, 0x97, 0x45, 0x05, 0xb3, 0x4a,
	0xeb, 0x1d, 0x92, 0xe4, 0x4d, 0xdb, 0x84, 0x5d, 0x74, 0xd3, 0x2a, 0xc5, 0xac, 0x23, 0xd2, 0x54,
	0xf6, 0x12, 0x2f, 0x61, 0xa2, 0x29, 0x50, 0xad, 0xd3, 0x6a, 0x49, 0x2d, 0x3e, 0x61, 0xfa, 0x91,
	0x20, 0xf0, 0x0d, 0xb2, 0x54, 0x87, 0x57, 0x63, 0xc4, 0xb4, 0xfc, 0xf5, 0xdd, 0x78, 0x34, 0x80,
	0x28, 0x0e, 0xe6, 0xe2, 0x51, 0x2c, 0x27, 0xf1, 0x2b, 0x9e, 0x7e, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x8a, 0x6a, 0x87, 0x30, 0x9c, 0x01, 0x00, 0x00,
}
