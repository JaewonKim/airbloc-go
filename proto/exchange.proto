syntax = "proto3";
package airbloc.exchange;

option go_package = "github.com/airbloc/airbloc-go/exchange/api";

import "proto/data.proto";
import "proto/types.proto";

service Exchange {
    rpc Order(OrderRequest) returns (airbloc.common.Hash);

    rpc Settle(airbloc.common.Hash) returns (airbloc.common.Result);
    rpc Reject(OrderIdRequest) returns (airbloc.common.Result);

    // after Open()
    rpc CloseOrder(OrderIdRequest) returns (airbloc.common.Result);
}

message Contract {
    enum Type {
        RICHARDIAN = 0;
        SMART = 1;
    }
    Type type = 1;
    airbloc.common.Address smartContractAddress = 2;
    bytes richardianHash = 3;
}

message OrderRequest {
    airbloc.data.BatchRequest data = 1;
    Contract contract = 2;
    string offeror = 3;
    string offeree = 4;
    repeated string option = 5;
    double amount = 6;
}

message OrderIdRequest {
    string OrderId = 1;
}

message ContractId {
    string ContractId = 1;
}

message SettleResult {
    ContractId contractId = 1;
}
