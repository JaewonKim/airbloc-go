syntax = "proto3";
package airbloc.rpc.v1;

option go_package = "github.com/airbloc/airbloc-go/proto/rpc/v1/server";

import "google/protobuf/empty.proto";

service Exchange {
    rpc Prepare(OrderRequest) returns (OfferId);
    rpc AddDataIds(DataIds) returns (google.protobuf.Empty);
    rpc Order(OfferId) returns (google.protobuf.Empty);
    rpc Settle(OfferId) returns (google.protobuf.Empty);
    rpc Reject(OfferId) returns (google.protobuf.Empty);
    rpc CloseOrder(OfferId) returns (Receipt);

    rpc GetOffer(OfferId) returns (Offer);
    rpc GetOfferCompact(OfferId) returns (OfferCompact);
    rpc GetReceiptsByOfferor(OfferId) returns (Offers);
    rpc GetReceiptsByOfferee(OfferId) returns (Offers);
    rpc GetReceiptsByEscrow(OfferId) returns (Offers);
}

enum Status {
    UNDEFINED = 0;
    NEUTRAL = 1;
    PENDING = 2;
    SETTLED = 3;
    REJECTED = 4;
    OPENED = 5;
    CLOSED = 6;
}

message RichardianContract {
    bytes hash = 1;
}

message SmartContract {
    string address = 1;
    bytes openSign = 2;
    bytes openArgs = 3;
    bytes closeSign = 4;
    bytes closeArgs = 5;
}

message Contract {
    enum Type {
        RICHARDIAN = 0;
        SMART = 1;
    }
    Type type = 1;
    SmartContract smartEscrow = 2;
    RichardianContract richarEscrow = 3;
}

message Receipt {
    string offerId = 1;
    string from = 2;
    string to = 3;
}

message OrderRequest {
    string to = 1;
    Contract contract = 2;
    repeated bytes dataIds = 3;
}

message Offer {
    string from = 1;
    string to = 2;
    repeated string dataIds = 3;
    Contract contract = 4;
    Status status = 5;
    bool reverted = 6;
}
message OfferCompact {
    string from = 1;
    string to = 2;
    // TODO : richardian contract support
    string escrow = 3;
    bool reverted = 4;
}
message Offers {repeated string offerIds = 1;}

message OfferId {
    string offerId = 1; // ID
}

message DataIds {
    string offerId = 1; // ID
    repeated string dataIds = 2; // ID
}


