syntax = "proto3";
package airbloc.rpc.v1;

option go_package = "github.com/airbloc/airbloc-go/proto/rpc/v1/server";

import "google/protobuf/empty.proto";

/**
 * Data Management API for both data providers and consumers.
 */
service Data {
    // Get returns information of the data from your warehouse or purchased data.
    rpc Get(DataId) returns (DataResult);
    rpc GetBatch(BatchRequest) returns (GetBatchResult);

    // SetPermission allows a consumer to access the given data.
    rpc SetPermission(SetDataPermissionRequest) returns (google.protobuf.Empty);
    rpc SetPermissionBatch(SetBatchDataPermissionRequest) returns (google.protobuf.Empty);

    // Delete removes specific data from your warehouse or purchased data.
    rpc Delete(DataId) returns (google.protobuf.Empty);
    rpc DeleteBatch(BatchRequest) returns (google.protobuf.Empty);

    // Select receives stream of data ID and creates a batch of data IDs.
    // the batch can be used as a input of batch operations.
    rpc Select(stream DataId) returns (BatchRequest);

    // Release unselects and removes the batch.
    rpc Release(BatchRequest) returns (google.protobuf.Empty);
}

message BatchRequest {
    string batchId = 1; // ID
}

message DataId {
    string dataId = 1; // ID
}

message DataResult {
    message Permission {
        string consumerId = 1; // ID
        bool allowAccess = 2;
    }

    string dataId = 1; // ID
    string collectionId = 2; // ID
    string ownerUserAid = 3; // ID
    string uri = 4;
    uint64 registeredAt = 5;
    repeated Permission permissions = 6;
}

message GetBatchResult {
    repeated DataResult data = 1;
}

message SetDataPermissionRequest {
    string dataId = 1; // ID
    string consumerId = 2; // ID
    bool allowAccess = 3;
}

message SetBatchDataPermissionRequest {
    string batchId = 1; // ID
    string consumerId = 2; // ID
    bool allowAccess = 3;
}
