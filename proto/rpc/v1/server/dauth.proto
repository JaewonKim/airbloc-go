syntax = "proto3";
package airbloc.rpc.v1;

option go_package = "github.com/airbloc/airbloc-go/proto/rpc/v1/server";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

/**
 * DAuth (Data Collection Authentification) API.
 */
service DAuth {
    rpc SignIn(SignInRequest) returns (SignInResponse) {
        option (google.api.http) = {
            post: "/v1/dauth/signin"
            body: "*"
        };
    }

    // GetAuthorization returns a list of the data authorization settings
    // which are done to collections of this app by given user.
    rpc GetAuthorizations(GetAuthorizationsRequest) returns (GetAuthorizationsResponse) {
        option (google.api.http) = {get: "/v1/dauth"};
    }
    rpc Allow(DAuthRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/dauth/{collectionId}/allow"
            body: "*"
        };
    }
    rpc Deny(DAuthRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/dauth/{collectionId}/deny"
            body: "*"
        };
    }
}

message SignInRequest {
    string identity = 1;
    string userDelegate = 2; // Address
}

message SignInResponse {
    string accountId = 1;
}

message DAuthRequest {
    string collectionId = 1;
    string accountId = 2;
}

message GetAuthorizationsRequest {
    string accountId = 1;
    string appId = 2; // TODO: Temporary
}

message GetAuthorizationsResponse {
    message Authorization {
        string collectionId = 1; // ID
        bool authorized = 2;
    }
    bool hasAuthorizedBefore = 1;
    repeated Authorization authorizations = 2;
}
