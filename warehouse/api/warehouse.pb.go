// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/warehouse.proto

package api // import "github.com/airbloc/airbloc-go/warehouse/api"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RawDataRequest struct {
	Collection           string   `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	OwnerId              string   `protobuf:"bytes,2,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	Payload              string   `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RawDataRequest) Reset()         { *m = RawDataRequest{} }
func (m *RawDataRequest) String() string { return proto.CompactTextString(m) }
func (*RawDataRequest) ProtoMessage()    {}
func (*RawDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_warehouse_89583b441ab60fdd, []int{0}
}
func (m *RawDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawDataRequest.Unmarshal(m, b)
}
func (m *RawDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawDataRequest.Marshal(b, m, deterministic)
}
func (dst *RawDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawDataRequest.Merge(dst, src)
}
func (m *RawDataRequest) XXX_Size() int {
	return xxx_messageInfo_RawDataRequest.Size(m)
}
func (m *RawDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RawDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RawDataRequest proto.InternalMessageInfo

func (m *RawDataRequest) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

func (m *RawDataRequest) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *RawDataRequest) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

type EncryptedDataRequest struct {
	Collection           string   `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	OwnerId              string   `protobuf:"bytes,2,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	EncryptedPayload     []byte   `protobuf:"bytes,3,opt,name=encryptedPayload,proto3" json:"encryptedPayload,omitempty"`
	Capsule              []byte   `protobuf:"bytes,4,opt,name=capsule,proto3" json:"capsule,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncryptedDataRequest) Reset()         { *m = EncryptedDataRequest{} }
func (m *EncryptedDataRequest) String() string { return proto.CompactTextString(m) }
func (*EncryptedDataRequest) ProtoMessage()    {}
func (*EncryptedDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_warehouse_89583b441ab60fdd, []int{1}
}
func (m *EncryptedDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptedDataRequest.Unmarshal(m, b)
}
func (m *EncryptedDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptedDataRequest.Marshal(b, m, deterministic)
}
func (dst *EncryptedDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptedDataRequest.Merge(dst, src)
}
func (m *EncryptedDataRequest) XXX_Size() int {
	return xxx_messageInfo_EncryptedDataRequest.Size(m)
}
func (m *EncryptedDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptedDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptedDataRequest proto.InternalMessageInfo

func (m *EncryptedDataRequest) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

func (m *EncryptedDataRequest) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *EncryptedDataRequest) GetEncryptedPayload() []byte {
	if m != nil {
		return m.EncryptedPayload
	}
	return nil
}

func (m *EncryptedDataRequest) GetCapsule() []byte {
	if m != nil {
		return m.Capsule
	}
	return nil
}

type StoreResult struct {
	BundleId             string   `protobuf:"bytes,1,opt,name=bundleId,proto3" json:"bundleId,omitempty"`
	Uri                  string   `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	DataCount            uint64   `protobuf:"varint,3,opt,name=dataCount,proto3" json:"dataCount,omitempty"`
	GasUsed              uint64   `protobuf:"varint,4,opt,name=gasUsed,proto3" json:"gasUsed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreResult) Reset()         { *m = StoreResult{} }
func (m *StoreResult) String() string { return proto.CompactTextString(m) }
func (*StoreResult) ProtoMessage()    {}
func (*StoreResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_warehouse_89583b441ab60fdd, []int{2}
}
func (m *StoreResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreResult.Unmarshal(m, b)
}
func (m *StoreResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreResult.Marshal(b, m, deterministic)
}
func (dst *StoreResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreResult.Merge(dst, src)
}
func (m *StoreResult) XXX_Size() int {
	return xxx_messageInfo_StoreResult.Size(m)
}
func (m *StoreResult) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreResult.DiscardUnknown(m)
}

var xxx_messageInfo_StoreResult proto.InternalMessageInfo

func (m *StoreResult) GetBundleId() string {
	if m != nil {
		return m.BundleId
	}
	return ""
}

func (m *StoreResult) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *StoreResult) GetDataCount() uint64 {
	if m != nil {
		return m.DataCount
	}
	return 0
}

func (m *StoreResult) GetGasUsed() uint64 {
	if m != nil {
		return m.GasUsed
	}
	return 0
}

type DeleteBundleRequest struct {
	Uri                  string   `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteBundleRequest) Reset()         { *m = DeleteBundleRequest{} }
func (m *DeleteBundleRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteBundleRequest) ProtoMessage()    {}
func (*DeleteBundleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_warehouse_89583b441ab60fdd, []int{3}
}
func (m *DeleteBundleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBundleRequest.Unmarshal(m, b)
}
func (m *DeleteBundleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBundleRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteBundleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBundleRequest.Merge(dst, src)
}
func (m *DeleteBundleRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteBundleRequest.Size(m)
}
func (m *DeleteBundleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBundleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBundleRequest proto.InternalMessageInfo

func (m *DeleteBundleRequest) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

type DeleteBundleResult struct {
	GasUsed              uint64   `protobuf:"varint,1,opt,name=gasUsed,proto3" json:"gasUsed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteBundleResult) Reset()         { *m = DeleteBundleResult{} }
func (m *DeleteBundleResult) String() string { return proto.CompactTextString(m) }
func (*DeleteBundleResult) ProtoMessage()    {}
func (*DeleteBundleResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_warehouse_89583b441ab60fdd, []int{4}
}
func (m *DeleteBundleResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBundleResult.Unmarshal(m, b)
}
func (m *DeleteBundleResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBundleResult.Marshal(b, m, deterministic)
}
func (dst *DeleteBundleResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBundleResult.Merge(dst, src)
}
func (m *DeleteBundleResult) XXX_Size() int {
	return xxx_messageInfo_DeleteBundleResult.Size(m)
}
func (m *DeleteBundleResult) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBundleResult.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBundleResult proto.InternalMessageInfo

func (m *DeleteBundleResult) GetGasUsed() uint64 {
	if m != nil {
		return m.GasUsed
	}
	return 0
}

func init() {
	proto.RegisterType((*RawDataRequest)(nil), "airbloc.warehouse.RawDataRequest")
	proto.RegisterType((*EncryptedDataRequest)(nil), "airbloc.warehouse.EncryptedDataRequest")
	proto.RegisterType((*StoreResult)(nil), "airbloc.warehouse.StoreResult")
	proto.RegisterType((*DeleteBundleRequest)(nil), "airbloc.warehouse.DeleteBundleRequest")
	proto.RegisterType((*DeleteBundleResult)(nil), "airbloc.warehouse.DeleteBundleResult")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WarehouseClient is the client API for Warehouse service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WarehouseClient interface {
	StoreBundle(ctx context.Context, opts ...grpc.CallOption) (Warehouse_StoreBundleClient, error)
	StoreEncryptedBundle(ctx context.Context, opts ...grpc.CallOption) (Warehouse_StoreEncryptedBundleClient, error)
	DeleteBundle(ctx context.Context, in *DeleteBundleRequest, opts ...grpc.CallOption) (*DeleteBundleResult, error)
}

type warehouseClient struct {
	cc *grpc.ClientConn
}

func NewWarehouseClient(cc *grpc.ClientConn) WarehouseClient {
	return &warehouseClient{cc}
}

func (c *warehouseClient) StoreBundle(ctx context.Context, opts ...grpc.CallOption) (Warehouse_StoreBundleClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Warehouse_serviceDesc.Streams[0], "/airbloc.warehouse.Warehouse/StoreBundle", opts...)
	if err != nil {
		return nil, err
	}
	x := &warehouseStoreBundleClient{stream}
	return x, nil
}

type Warehouse_StoreBundleClient interface {
	Send(*RawDataRequest) error
	CloseAndRecv() (*StoreResult, error)
	grpc.ClientStream
}

type warehouseStoreBundleClient struct {
	grpc.ClientStream
}

func (x *warehouseStoreBundleClient) Send(m *RawDataRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *warehouseStoreBundleClient) CloseAndRecv() (*StoreResult, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(StoreResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *warehouseClient) StoreEncryptedBundle(ctx context.Context, opts ...grpc.CallOption) (Warehouse_StoreEncryptedBundleClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Warehouse_serviceDesc.Streams[1], "/airbloc.warehouse.Warehouse/StoreEncryptedBundle", opts...)
	if err != nil {
		return nil, err
	}
	x := &warehouseStoreEncryptedBundleClient{stream}
	return x, nil
}

type Warehouse_StoreEncryptedBundleClient interface {
	Send(*EncryptedDataRequest) error
	CloseAndRecv() (*StoreResult, error)
	grpc.ClientStream
}

type warehouseStoreEncryptedBundleClient struct {
	grpc.ClientStream
}

func (x *warehouseStoreEncryptedBundleClient) Send(m *EncryptedDataRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *warehouseStoreEncryptedBundleClient) CloseAndRecv() (*StoreResult, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(StoreResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *warehouseClient) DeleteBundle(ctx context.Context, in *DeleteBundleRequest, opts ...grpc.CallOption) (*DeleteBundleResult, error) {
	out := new(DeleteBundleResult)
	err := c.cc.Invoke(ctx, "/airbloc.warehouse.Warehouse/DeleteBundle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WarehouseServer is the server API for Warehouse service.
type WarehouseServer interface {
	StoreBundle(Warehouse_StoreBundleServer) error
	StoreEncryptedBundle(Warehouse_StoreEncryptedBundleServer) error
	DeleteBundle(context.Context, *DeleteBundleRequest) (*DeleteBundleResult, error)
}

func RegisterWarehouseServer(s *grpc.Server, srv WarehouseServer) {
	s.RegisterService(&_Warehouse_serviceDesc, srv)
}

func _Warehouse_StoreBundle_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(WarehouseServer).StoreBundle(&warehouseStoreBundleServer{stream})
}

type Warehouse_StoreBundleServer interface {
	SendAndClose(*StoreResult) error
	Recv() (*RawDataRequest, error)
	grpc.ServerStream
}

type warehouseStoreBundleServer struct {
	grpc.ServerStream
}

func (x *warehouseStoreBundleServer) SendAndClose(m *StoreResult) error {
	return x.ServerStream.SendMsg(m)
}

func (x *warehouseStoreBundleServer) Recv() (*RawDataRequest, error) {
	m := new(RawDataRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Warehouse_StoreEncryptedBundle_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(WarehouseServer).StoreEncryptedBundle(&warehouseStoreEncryptedBundleServer{stream})
}

type Warehouse_StoreEncryptedBundleServer interface {
	SendAndClose(*StoreResult) error
	Recv() (*EncryptedDataRequest, error)
	grpc.ServerStream
}

type warehouseStoreEncryptedBundleServer struct {
	grpc.ServerStream
}

func (x *warehouseStoreEncryptedBundleServer) SendAndClose(m *StoreResult) error {
	return x.ServerStream.SendMsg(m)
}

func (x *warehouseStoreEncryptedBundleServer) Recv() (*EncryptedDataRequest, error) {
	m := new(EncryptedDataRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Warehouse_DeleteBundle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBundleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WarehouseServer).DeleteBundle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/airbloc.warehouse.Warehouse/DeleteBundle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WarehouseServer).DeleteBundle(ctx, req.(*DeleteBundleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Warehouse_serviceDesc = grpc.ServiceDesc{
	ServiceName: "airbloc.warehouse.Warehouse",
	HandlerType: (*WarehouseServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeleteBundle",
			Handler:    _Warehouse_DeleteBundle_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StoreBundle",
			Handler:       _Warehouse_StoreBundle_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "StoreEncryptedBundle",
			Handler:       _Warehouse_StoreEncryptedBundle_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "proto/warehouse.proto",
}

func init() { proto.RegisterFile("proto/warehouse.proto", fileDescriptor_warehouse_89583b441ab60fdd) }

var fileDescriptor_warehouse_89583b441ab60fdd = []byte{
	// 365 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x25, 0x6d, 0x51, 0x3b, 0x16, 0xa9, 0x6b, 0x85, 0x50, 0xa4, 0x68, 0x40, 0x5b, 0x94, 0xa6,
	0xa0, 0xff, 0xa0, 0xd6, 0x43, 0x6f, 0xb2, 0x22, 0x82, 0xe0, 0x61, 0x93, 0x1d, 0xda, 0xc0, 0x9a,
	0x8d, 0xc9, 0x2e, 0xa5, 0x7f, 0xc4, 0xbb, 0xff, 0x54, 0xb2, 0xcd, 0xc6, 0x94, 0x06, 0xf4, 0xe0,
	0x29, 0x79, 0xf3, 0xf1, 0xde, 0xec, 0x3c, 0x06, 0x4e, 0x93, 0x54, 0x2a, 0x39, 0x59, 0xb1, 0x14,
	0x97, 0x52, 0x67, 0xe8, 0x1b, 0x4c, 0x8e, 0x59, 0x94, 0x06, 0x42, 0x86, 0x7e, 0x99, 0xf0, 0x38,
	0x1c, 0x51, 0xb6, 0x9a, 0x31, 0xc5, 0x28, 0x7e, 0x68, 0xcc, 0x14, 0x19, 0x00, 0x84, 0x52, 0x08,
	0x0c, 0x55, 0x24, 0x63, 0xd7, 0x39, 0x77, 0x46, 0x6d, 0x5a, 0x89, 0x10, 0x17, 0xf6, 0xe5, 0x2a,
	0xc6, 0x74, 0xce, 0xdd, 0x86, 0x49, 0x5a, 0x98, 0x67, 0x12, 0xb6, 0x16, 0x92, 0x71, 0xb7, 0xb9,
	0xc9, 0x14, 0xd0, 0xfb, 0x74, 0xa0, 0xf7, 0x10, 0x87, 0xe9, 0x3a, 0x51, 0xc8, 0xff, 0x47, 0xec,
	0x1a, 0xba, 0x68, 0x19, 0x1f, 0x2b, 0xaa, 0x1d, 0xba, 0x13, 0xcf, 0x59, 0x42, 0x96, 0x64, 0x5a,
	0xa0, 0xdb, 0x32, 0x25, 0x16, 0x7a, 0x19, 0x1c, 0x3e, 0x29, 0x99, 0x22, 0xc5, 0x4c, 0x0b, 0x45,
	0xfa, 0x70, 0x10, 0xe8, 0x98, 0x0b, 0x9c, 0xf3, 0x62, 0x98, 0x12, 0x93, 0x2e, 0x34, 0x75, 0x1a,
	0x15, 0x63, 0xe4, 0xbf, 0xe4, 0x0c, 0xda, 0x9c, 0x29, 0x76, 0x2f, 0x75, 0xac, 0x8c, 0x76, 0x8b,
	0xfe, 0x04, 0x72, 0xd1, 0x05, 0xcb, 0x9e, 0x33, 0xe4, 0x46, 0xb4, 0x45, 0x2d, 0xf4, 0x86, 0x70,
	0x32, 0x43, 0x81, 0x0a, 0xa7, 0x86, 0xdb, 0xee, 0xa2, 0x10, 0x70, 0x4a, 0x01, 0xcf, 0x07, 0xb2,
	0x5d, 0x68, 0x86, 0xac, 0x10, 0x3b, 0x5b, 0xc4, 0xb7, 0x5f, 0x0d, 0x68, 0xbf, 0x58, 0x6b, 0x09,
	0x2d, 0xde, 0xb6, 0x69, 0x26, 0x17, 0xfe, 0x8e, 0xfb, 0xfe, 0xb6, 0xf5, 0xfd, 0x41, 0x4d, 0x49,
	0x65, 0x3d, 0x23, 0x87, 0x30, 0xe8, 0x99, 0x40, 0x69, 0x66, 0x41, 0x3e, 0xac, 0xe9, 0xac, 0x33,
	0xfc, 0x0f, 0x12, 0x6f, 0xd0, 0xa9, 0x3e, 0x9a, 0x5c, 0xd5, 0x74, 0xd4, 0xac, 0xaf, 0x7f, 0xf9,
	0x6b, 0x5d, 0x2e, 0x30, 0x1d, 0xbf, 0xde, 0x2c, 0x22, 0xb5, 0xd4, 0x81, 0x1f, 0xca, 0xf7, 0x49,
	0xd1, 0x62, 0xbf, 0xe3, 0x45, 0xe5, 0x68, 0x26, 0x2c, 0x89, 0x82, 0x3d, 0x73, 0x39, 0x77, 0xdf,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x3c, 0x9a, 0xf1, 0xcc, 0x52, 0x03, 0x00, 0x00,
}
