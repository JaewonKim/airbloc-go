// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/apps.proto

package api // import "github.com/airbloc/airbloc-go/apps/api"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Response struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_apps_7a998563a016584b, []int{0}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type NewOwnerRequest struct {
	AppId                string   `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	Owner                string   `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewOwnerRequest) Reset()         { *m = NewOwnerRequest{} }
func (m *NewOwnerRequest) String() string { return proto.CompactTextString(m) }
func (*NewOwnerRequest) ProtoMessage()    {}
func (*NewOwnerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_apps_7a998563a016584b, []int{1}
}
func (m *NewOwnerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewOwnerRequest.Unmarshal(m, b)
}
func (m *NewOwnerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewOwnerRequest.Marshal(b, m, deterministic)
}
func (dst *NewOwnerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewOwnerRequest.Merge(dst, src)
}
func (m *NewOwnerRequest) XXX_Size() int {
	return xxx_messageInfo_NewOwnerRequest.Size(m)
}
func (m *NewOwnerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewOwnerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewOwnerRequest proto.InternalMessageInfo

func (m *NewOwnerRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *NewOwnerRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type CheckOwnerRequest struct {
	AppId                string   `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	Owner                string   `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckOwnerRequest) Reset()         { *m = CheckOwnerRequest{} }
func (m *CheckOwnerRequest) String() string { return proto.CompactTextString(m) }
func (*CheckOwnerRequest) ProtoMessage()    {}
func (*CheckOwnerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_apps_7a998563a016584b, []int{2}
}
func (m *CheckOwnerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckOwnerRequest.Unmarshal(m, b)
}
func (m *CheckOwnerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckOwnerRequest.Marshal(b, m, deterministic)
}
func (dst *CheckOwnerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckOwnerRequest.Merge(dst, src)
}
func (m *CheckOwnerRequest) XXX_Size() int {
	return xxx_messageInfo_CheckOwnerRequest.Size(m)
}
func (m *CheckOwnerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckOwnerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckOwnerRequest proto.InternalMessageInfo

func (m *CheckOwnerRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *CheckOwnerRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type RegisterRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_apps_7a998563a016584b, []int{3}
}
func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (dst *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(dst, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UnregisterRequest struct {
	AppId                string   `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnregisterRequest) Reset()         { *m = UnregisterRequest{} }
func (m *UnregisterRequest) String() string { return proto.CompactTextString(m) }
func (*UnregisterRequest) ProtoMessage()    {}
func (*UnregisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_apps_7a998563a016584b, []int{4}
}
func (m *UnregisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnregisterRequest.Unmarshal(m, b)
}
func (m *UnregisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnregisterRequest.Marshal(b, m, deterministic)
}
func (dst *UnregisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnregisterRequest.Merge(dst, src)
}
func (m *UnregisterRequest) XXX_Size() int {
	return xxx_messageInfo_UnregisterRequest.Size(m)
}
func (m *UnregisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnregisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnregisterRequest proto.InternalMessageInfo

func (m *UnregisterRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func init() {
	proto.RegisterType((*Response)(nil), "airbloc.apps.Response")
	proto.RegisterType((*NewOwnerRequest)(nil), "airbloc.apps.NewOwnerRequest")
	proto.RegisterType((*CheckOwnerRequest)(nil), "airbloc.apps.CheckOwnerRequest")
	proto.RegisterType((*RegisterRequest)(nil), "airbloc.apps.RegisterRequest")
	proto.RegisterType((*UnregisterRequest)(nil), "airbloc.apps.UnregisterRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AppClient is the client API for App service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AppClient interface {
	NewOwner(ctx context.Context, in *NewOwnerRequest, opts ...grpc.CallOption) (*Response, error)
	CheckOwner(ctx context.Context, in *CheckOwnerRequest, opts ...grpc.CallOption) (*Response, error)
	Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*Response, error)
	Unregister(ctx context.Context, in *UnregisterRequest, opts ...grpc.CallOption) (*Response, error)
}

type appClient struct {
	cc *grpc.ClientConn
}

func NewAppClient(cc *grpc.ClientConn) AppClient {
	return &appClient{cc}
}

func (c *appClient) NewOwner(ctx context.Context, in *NewOwnerRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/airbloc.apps.App/NewOwner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) CheckOwner(ctx context.Context, in *CheckOwnerRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/airbloc.apps.App/CheckOwner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/airbloc.apps.App/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) Unregister(ctx context.Context, in *UnregisterRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/airbloc.apps.App/Unregister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AppServer is the server API for App service.
type AppServer interface {
	NewOwner(context.Context, *NewOwnerRequest) (*Response, error)
	CheckOwner(context.Context, *CheckOwnerRequest) (*Response, error)
	Register(context.Context, *RegisterRequest) (*Response, error)
	Unregister(context.Context, *UnregisterRequest) (*Response, error)
}

func RegisterAppServer(s *grpc.Server, srv AppServer) {
	s.RegisterService(&_App_serviceDesc, srv)
}

func _App_NewOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewOwnerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).NewOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/airbloc.apps.App/NewOwner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).NewOwner(ctx, req.(*NewOwnerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_CheckOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckOwnerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).CheckOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/airbloc.apps.App/CheckOwner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).CheckOwner(ctx, req.(*CheckOwnerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/airbloc.apps.App/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).Register(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_Unregister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnregisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).Unregister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/airbloc.apps.App/Unregister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).Unregister(ctx, req.(*UnregisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _App_serviceDesc = grpc.ServiceDesc{
	ServiceName: "airbloc.apps.App",
	HandlerType: (*AppServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewOwner",
			Handler:    _App_NewOwner_Handler,
		},
		{
			MethodName: "CheckOwner",
			Handler:    _App_CheckOwner_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _App_Register_Handler,
		},
		{
			MethodName: "Unregister",
			Handler:    _App_Unregister_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/apps.proto",
}

func init() { proto.RegisterFile("proto/apps.proto", fileDescriptor_apps_7a998563a016584b) }

var fileDescriptor_apps_7a998563a016584b = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0x4d, 0x4b, 0xc4, 0x30,
	0x10, 0xa5, 0xeb, 0x57, 0x77, 0x10, 0xd6, 0x0d, 0x22, 0x45, 0x10, 0x97, 0x82, 0x52, 0x0f, 0xb6,
	0xa0, 0x67, 0x95, 0x2a, 0x1e, 0xbc, 0x28, 0x04, 0xbc, 0x78, 0x4b, 0xe3, 0xd0, 0x2d, 0xda, 0x26,
	0x76, 0x5a, 0xf6, 0xb7, 0xf8, 0x6f, 0x25, 0xfd, 0xb0, 0x6e, 0xd6, 0xf5, 0xe0, 0xa9, 0x79, 0x99,
	0x37, 0xaf, 0xef, 0x4d, 0x06, 0xf6, 0x74, 0xa9, 0x2a, 0x15, 0x09, 0xad, 0x29, 0x6c, 0x8e, 0x6c,
	0x57, 0x64, 0x65, 0xf2, 0xae, 0x64, 0x68, 0xee, 0xfc, 0x6b, 0x70, 0x39, 0x92, 0x56, 0x05, 0x21,
	0xf3, 0x60, 0x87, 0x6a, 0x29, 0x91, 0xc8, 0x73, 0x66, 0x4e, 0xe0, 0xf2, 0x1e, 0x9a, 0x4a, 0x8e,
	0x44, 0x22, 0x45, 0x6f, 0x34, 0x73, 0x82, 0x31, 0xef, 0xa1, 0x7f, 0x05, 0x93, 0x47, 0x5c, 0x3c,
	0x2d, 0x0a, 0x2c, 0x39, 0x7e, 0xd4, 0x48, 0x15, 0xdb, 0x87, 0x2d, 0xa1, 0xf5, 0xc3, 0x6b, 0x23,
	0x32, 0xe6, 0x2d, 0x30, 0xb7, 0xca, 0xb0, 0x3a, 0x81, 0x16, 0xf8, 0x37, 0x30, 0xbd, 0x9b, 0xa3,
	0x7c, 0xfb, 0xb7, 0xc0, 0x09, 0x4c, 0x38, 0xa6, 0x19, 0x55, 0x43, 0x3b, 0x83, 0xcd, 0x42, 0xe4,
	0xd8, 0x75, 0x37, 0x67, 0xff, 0x0c, 0xa6, 0xcf, 0x45, 0x69, 0x11, 0x7f, 0xfd, 0xcf, 0xc5, 0xe7,
	0x08, 0x36, 0x62, 0xad, 0x59, 0x0c, 0x6e, 0x9f, 0x8c, 0x1d, 0x85, 0x3f, 0x87, 0x16, 0x5a, 0x89,
	0x0f, 0x0f, 0x96, 0xcb, 0xdf, 0x03, 0xbd, 0x07, 0x18, 0xd2, 0xb1, 0xe3, 0x65, 0xd6, 0x4a, 0xee,
	0xb5, 0x32, 0xb1, 0x79, 0xa3, 0xd6, 0xba, 0xed, 0xc4, 0xca, 0xfe, 0x97, 0x93, 0x21, 0xbf, 0xed,
	0x64, 0x65, 0x32, 0xeb, 0x64, 0x6e, 0x83, 0x97, 0xd3, 0x34, 0xab, 0xe6, 0x75, 0x12, 0x4a, 0x95,
	0x47, 0x1d, 0xa7, 0xff, 0x9e, 0xa7, 0xed, 0x9e, 0x45, 0x42, 0x67, 0xc9, 0x76, 0xb3, 0x6c, 0x97,
	0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xb8, 0x2c, 0x5d, 0x3d, 0x80, 0x02, 0x00, 0x00,
}
